{
    "openapi": "3.0.0",
    "info": {
        "title": "VideoClub ApplicationAPI",
        "version": "2.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Credenciales no validas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/movies": {
            "get": {
                "tags": [
                    "Movies"
                ],
                "summary": "Get list of movies",
                "description": "Returns list of movies",
                "operationId": "getMoviesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MovieResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Movies"
                ],
                "summary": "Store new movie",
                "description": "Returns movie data",
                "operationId": "movieProject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoviePost"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Movie"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Usuario no autenticado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/movies/{id}": {
            "get": {
                "tags": [
                    "Movies"
                ],
                "summary": "Get list of movies",
                "description": "Returns list of movies",
                "operationId": "getMoviesList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Movie"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "MoviePost": {
                "title": "Store Movie Request",
                "description": "Store Movie request body data",
                "required": [
                    "title,director,year"
                ],
                "properties": {
                    "title": {
                        "title": "name",
                        "description": "Title",
                        "type": "string",
                        "example": "Titanic"
                    },
                    "year": {
                        "title": "year",
                        "description": "Year",
                        "type": "integer",
                        "example": "1998"
                    },
                    "genre": {
                        "title": "genre",
                        "description": "Genre",
                        "type": "integer",
                        "example": "1"
                    },
                    "director": {
                        "title": "director",
                        "description": "Director",
                        "type": "string",
                        "example": "Steven Spilberg"
                    },
                    "synopsis": {
                        "title": "synopsis",
                        "description": "Synopsis",
                        "type": "string",
                        "example": "De que va la pelicula"
                    },
                    "poster": {
                        "title": "poster",
                        "description": "Poster",
                        "type": "string",
                        "example": "adre√ßa del poster"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "MoviePost"
                }
            },
            "MovieResource": {
                "title": "MovieResource",
                "description": "Project resource",
                "properties": {
                    "data": {
                        "title": "data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Movie"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "MovieResource"
                }
            },
            "BaseModel": {
                "properties": {
                    "created_at": {
                        "description": "Initial creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "Movie": {
                "required": [
                    "id,title"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "title": {
                        "description": "User role",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "year": {
                        "description": "Year",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1956"
                    },
                    "director": {
                        "description": "Director",
                        "type": "string",
                        "readOnly": "true",
                        "example": "Copolla"
                    },
                    "genre": {
                        "description": "Genre",
                        "type": "string",
                        "readOnly": "true",
                        "example": "Thriller"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Movie"
                }
            },
            "User": {
                "required": [
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "user@gmail.com"
                    },
                    "email_verified_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Doe"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}